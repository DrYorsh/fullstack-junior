networks:
  dev:


services:
  nginx:
    image: nginx:stable-alpine
    restart: unless-stopped
    # env_file: .env
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "./nginx/nginx.conf:/etc/nginx/nginx.conf"
      # Для сретификата SSL
      - ./nginx/secure/:/etc/nginx/templates/
      - /etc/localtime:/etc/localtime:ro
      - ./nginx/certbot/conf:/etc/letsencrypt
      - ./nginx/certbot/www:/var/www/certbot
      - ./nginx/99-autoreload.sh:/docker-entrypoint.d/99-autoreload.sh
    depends_on:
      - backend
      - frontend
      - db
    networks:
      - dev
  backend:
    build:
      context: ./backend
    depends_on:
      - db
    extra_hosts:
      - "host.docker.internal:host-gateway"
    networks:
      - dev
  frontend:
    build:
      context: ./mern-blog-frontend-master
    networks:
      - dev
  db:
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: post205077
      POSTGRES_DB: db_fullstack_junior
    volumes:
      - ./pgdata:/var/lib/postgresql/data
      - ./database.sql:/docker-entrypoint-initdb.d/database.sql
    ports:
      - "5432:5432"
    tty: true
    stdin_open: true
    networks:
      - dev

  certbot:
      image: certbot/certbot
      volumes:
        - ./nginx/certbot/conf:/etc/letsencrypt
        - ./nginx/certbot/www:/var/www/certbot
      entrypoint: "/bin/sh -c 'trap exit TERM; while :; do certbot renew; sleep 12h & wait $${!}; done;'"

volumes:
  pgdata:
    driver: local
